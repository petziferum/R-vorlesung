help(runif)
runif(20)
matrix(runif(20), nrow=4)
matrix(runif(20), nrow=4)*100
matrix(runif(20), nrow=4)*100
matrix(runif(20), nrow=4)*100
matrix(runif(20), nrow=4)*100
matrix(runif(20, min=0, max=100), nrow=4)*100
matrix(runif(20, min=0, max=100), nrow=4)
2^5
[1]23,27,23,21,24
[1]23 27 23 21 24
aktien.preise <- c(23,27,23,21,34)
quartal <- c("Q1", "Q2", "Q3", "Q4")
df <- data.frame(quartal, aktien.preise)
df <- data.frame(quartal, aktien.preise)
aktien<- c(23,27,23,21,34)
df <- data.frame(quartal, aktien)
lockdown <- c(TRUE, TRUE, FALSE, FALSE)
df <- data.frame(quartal, aktien)
df <- data.frame(quartal, aktien lockdownd)
df <- data.frame(quartal, aktien lockdown)
df <- data.frame(quartal, aktien, lockdown)
df
df <- data.frame(quartal, aktien, lockdown)
df <- data.frame(quartal, aktien, lockdown)
aktien<- c(23,27,23,21)
df <- data.frame(quartal, aktien, lockdown)
df
ls
ls()
rm(aktien.preise)
df["Q1"]
df["aktie"]
df[ , "aktie"]
df[1 , "aktie"]
df <- data.frame(quartal, aktien, lockdown)
df
df["aktien"]
df$aktien
subset(df, aktien >= 105)
subset(df, aktien >= 25)
aktien<- c(23,27,26,21)
subset(df, aktien >= 25)
subset(df, aktien >= 25 & lockdown = TRUE)
subset(df, aktien >= 25 & lockdown == TRUE)
subset(df, aktien >= 24 & lockdown == TRUE)
df <- data.frame(quartal, aktien, lockdown)
subset(df, aktien >= 24 & lockdown == TRUE)
lockdown <- c(TRUE, TRUE, FALSE, FALSE)
quartal <- c("Q1", "Q2", "Q3", "Q4")
aktien<- c(23,27,26,21)
df <- data.frame(quartal, aktien, lockdown)
df
df["aktien"] #Eine Spalte aus dem Dataframe auslesen
subset(df, aktien >= 24 & lockdown == TRUE)
subset(df, aktien >= 21 & lockdown == TRUE)
head(df)
view(df)
V(df)
View(df)
ncol(df)
nrow(df)
df
aktien_2 <- c(200, 22, 48, 18)
df_2 <- cbind(df, aktien_2)
df_2
#neue Spalten/Variablen berechnen
avg_aktien <- (df_2$aktien + df_2$aktien_2)/2
avg_aktien
#neue Spalten/Variablen berechnen
avg_aktien <- (df_2$aktien + df_2$aktien_2)
df_2 <- cbind(df_2, avg_aktien)
df_2
#neue Spalten/Variablen berechnen
avg_aktien <- (df_2$aktien + df_2$aktien_2)/2
df_2
df_2 <- cbind(df_2, avg_aktien)
df_2
df_2$avg_aktien <- (df_2$aktien + df_2$aktien_2)/2
df_2
df_2
df_2 <- rm(avg_aktien)
df_2
df_2 <- cbind(df, aktien_2)
df_2$avg_aktien <- (df_2$aktien + df_2$aktien_2)/2
df_2
df_2 <- rm(df_2$avg_aktien)
df_3 <- df_2[ , c("avg_aktien", "aktien", "aktien_2")]
df_2
df_2 <- df_2[ , c("avg_aktien", "aktien", "aktien_2")]
df_2
df_2 <- df_2[ , c("avg_aktien", "aktien", "aktien_2", "quartal", "lockdown")]
df_2 <- cbind(df, aktien_2)
df_2 <- df_2[ , c("avg_aktien", "aktien", "aktien_2", "quartal", "lockdown")]
df_2
data()
df_2 <- cbind(df_2, avg_aktien)
#neue Spalten/Variablen berechnen
avg_aktien <- (df_2$aktien + df_2$aktien_2)/2
df_2 <- cbind(df_2, avg_aktien)
df_2 <- df_2[ , c("avg_aktien", "aktien", "aktien_2", "quartal", "lockdown")]
df_2
head(mtcars)
df <- mtcars
head(df)
View(df)
Alter <- c(25,22,26)
Gewicht <- c(85,76,62)
Geschlecht <- c("M","M","F")
pf <- data.frame(Alter, Gewicht, Geschlecht)
pf
print(is.data.frame(mtcars))
cars <- as.data.frame(mtcars)
cars
mtcars
pf <- row.names("Sam", "Frank", "Anna")
Namen <- c("Sam", "Frank", "Anna")
pf <- data.frame(Names, Alter, Gewicht, Geschlecht)
pf <- data.frame(Namen, Alter, Gewicht, Geschlecht)
pf
pf <- data.frame(row.names = Namen, Alter, Gewicht, Geschlecht)
pf
head(cars)
mean(cars$mpg)
#7 ---------------------------------
cylinder <- subset(cars, cyl == 6)
cylinder
pf
mean(pf$Alter)
mean(pf$Alter, na.rm=TRUE)
pf
pf["Anna", "Alter"] <- NA
pf
mean(pf$Alter)
mean(pf$Alter, na.rm=TRUE)
is.data.frame(pf)
is.na(pf$Alter)
mat <- matrix(c(1:25), byrow=F, nrow=5)
mat
is.data.frame(mat)
matdf <- as.data.frame(mat)
is.data.frame(matdf)
class(mat)
class(matdf)
matdf
#8 ---------------------------------
subset(cars, cyl)
cars_view <- c("am", "gear", "carb")
cars[ , cars_view]
cars[ , "am", "gear", "carb"]
cars[ , c("am", "gear", "carb")]
head[cars[ , c("am","gear","carb")]]
head(cars[ , c("am","gear","carb")])
#9 ---------------------------------
#10 --------------------------------
performance <- cars$hp/cars$wt
performance
cars <- cbind(cars, performance)
cars
#12 --------------------------------
cars$performance <- round(cars$performance, 2)
head(cars)
#13 --------------------------------
cars_ps <- cars[cars$hp > 100 & cars$wt > 2.5, ]
cars_ps
mean(cars[cars$hp > 100 & cars$wt > 2.5, "mpg"])
mean(cars_ps[ , "mpg"])
#15 -------------------------------
cars{"Hornet Sportabout", "mpg"}
#15 -------------------------------
cars["Hornet Sportabout", "mpg"]
head(cars)
pf["Anna", "Alter"] <- NA
mean(pf$Alter)
mean(pf$Alter, na.rm=TRUE)
pf
df <- read.table("02_Daten/beispiel.csv")
df
View(df)
remove(df)
df <- read.table("02_Daten/beispiel.csv", header = TRUE)
df
View(df)
df <- read.table("02_Daten/beispiel.csv", sep = "," header = TRUE)
df <- read.table("02_Daten/beispiel.csv", sep = ",", header = TRUE)
View(df)
df
df[ , "Date"]
Table(df[ , "Date"])
table(df[ , "Date"])
table(df[1])
table(df[1, ])
table(df[1, 2])
table(df[1, 1])
table(df[ , "name"])
table(df[ ,"name"])
table(df[ ,"Name"])
table(df[ ,])
is.data.frame(df)
df[ , c("Name", "Orders")]
df <- read.table("02_Daten/Beispiel-Verkaufs-Daten.xlsx", sep = ",", header = TRUE)
df <- read.table("02_Daten/Beispiel-Verkaufs-Daten.xlsx")
library(readxl)
df <- read.table("02_Daten/Beispiel-Verkaufs-Daten.xlsx")
install.packages(dplyer)
install.packages("dplyer")
library(dplyr)
library(dplyer)
install.packages("dplyr")
library(dplyr)
df
df <- read.table("02_Daten/Beispiel-Verkaufs-Daten.xlsx")
df <- read.table("02_Daten/Beispiel-Verkaufs-Daten.xlsx")
df <- swiss
df
filter(df, Fertility > 85)
filter(df, Fertility >= 85)
filter(df, Fertility >= 80)
filter(df, Fertility >= 83)
filter(df, Fertility >= 83.1)
filter(df, Fertility >= 60)
filter(df, Fertility >= 60 & Examination > 12)
select(df, Fertility, Examination)
head(select(df, -Fertility, -Examination))
#sortieren
arrange(df, Fertility, Examinatioin)
#sortieren
arrange(df, Fertility, Examination)
arrange(df, Fertility, Examination, desc())
arrange(df, desc(Fertility, Examination))
arrange(df, desc(Fertility))
arrange(df, asc(Fertility))
arrange(df, ascd(Fertility))
help(arrange)
%>%
df %>% filter(Fertility > 80)
df %>% filter(Fertility > 80) %>% sample_n(5)
df %>% filter(Fertility > 80) %>% sample_n(5) %>% arrange(-Exam)
df %>% filter(Fertility > 80) %>% sample_n(5) %>% arrange(-Examination)
#PIPE - Operator (shortcut: str + shift + m) ----------------------------------
set.seed(123)
df %>% filter(Fertility > 80) %>% sample_n(5) %>% arrange(-Examination)
set.seed(123)
df %>% filter(Fertility > 80) %>% sample_n(5) %>% arrange(-Examination)
